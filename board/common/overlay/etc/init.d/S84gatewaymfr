#!/bin/bash

WORK_DIR="/opt/gateway_mfr"
PROG="bin/gateway_mfr"
PROG_TUNNEL="/sbin/sshtunnel"
FULL_PROG=${WORK_DIR}/${PROG}
LOG="/var/log/gateway_mfr/startup.log"
SYS_CONF="/opt/gateway_mfr/releases/0.1.0/sys.config"
HARDWARE_CONF="/var/run/hardware.conf"


test -n "${OS_VERSION}" || source /etc/init.d/base

source ${HARDWARE_CONF}
source /etc/init.d/ledpattern


prov_ecc() {
    msg_begin "Provisioning ECC chip"
    
    if ! [[ -e /dev/i2c-1 ]]; then
        set_led_pattern 3 ${LED_COLOR_ERROR}
        msg_fail "no I2C device"
        return 1
    fi

    cd ${WORK_DIR}
    export HOME=/var/run
    
    # Retry multiple times to provision, as ECC communication may sometimes fail
    ${PROG} ecc provision &>> ${LOG}
    ${PROG} ecc provision &>> ${LOG}
    ${PROG} ecc provision &>> ${LOG}

    msg_done
}

check_slot_config() {
    msg_begin "Checking ECC slot config"
    
    if ! [[ -e /dev/i2c-1 ]]; then
        set_led_pattern 3 ${LED_COLOR_ERROR}
        msg_fail "no I2C device"
        return 1
    fi

    cd ${WORK_DIR}
    export HOME=/var/run
    
    # Retry multiple times, as ECC communication may sometimes fail
    output=$( \
        ${PROG} eval "{ok, State} = gateway_mfr_worker:init(nvm), {_, Pid} = State, ecc508:wake(Pid), ecc508:get_slot_config(Pid, ${ECC_SLOT})." | grep 'READ KEY' || \
        ${PROG} eval "{ok, State} = gateway_mfr_worker:init(nvm), {_, Pid} = State, ecc508:wake(Pid), ecc508:get_slot_config(Pid, ${ECC_SLOT})." | grep 'READ KEY' || \
        ${PROG} eval "{ok, State} = gateway_mfr_worker:init(nvm), {_, Pid} = State, ecc508:wake(Pid), ecc508:get_slot_config(Pid, ${ECC_SLOT})." | grep 'READ KEY' \
    )
    if [[ "${output}" != "READ KEY 7" ]]; then
        set_led_pattern 3 ${LED_COLOR_ERROR}
        msg_fail "${output}"
        return 1
    fi
    msg_done
}

start() {
    msg_begin "Starting gateway-mfr"
    
    if ! [[ -e /dev/i2c-1 ]]; then
        msg_fail "no I2C device"
        return 1
    fi

    mkdir -p $(dirname ${LOG})

    cd ${WORK_DIR}
    
    export RUNNER_LOG_DIR="/var/log/gateway_mfr"
    export ERL_CRASH_DUMP="/var/log/gateway_mfr"
    export ERL_EPMD_ADDRESS="127.0.0.1"
    export HOME="/var/run"
    export RELX_CONFIG_PATH="/var/run/gateway_mfr_sys.config"

    # Prepare config file
    cp ${SYS_CONF} ${RELX_CONFIG_PATH}
    sed -ri "s/ecc_key_slot, [[:digit:]]/ecc_key_slot, ${ECC_SLOT}/" ${RELX_CONFIG_PATH}
    sed -ri "s/ecc_address, 16#[[:digit:]]+/ecc_address, 16#${ECC_ADDRESS:2}/" ${RELX_CONFIG_PATH}

    ${PROG} foreground &>> ${LOG} &
    sleep 2  # Allow 2 seconds for service to become reachable
    msg_done
    
    if ! prov_ecc || ! check_slot_config; then
        ${PROG_TUNNEL} start
        sleep 86400
        reboot
        return 1
    fi
}

stop() {
    msg_begin "Stopping gateway-mfr"
    
    base_prog=$(basename ${PROG})
    if killall -q ${base_prog}; then
        # Allow 2 seconds for a gracefulish shutdown
        sleep 2
        msg_done
    else
        msg_fail
    fi
    
    # Kill any remainings with SIGKILL
    ps | grep -E 'gateway.?mfr' | grep -v $$ | grep -v grep | tr -s ' ' | sed -e 's/^\s//' | cut -d ' ' -f 1 | xargs -r kill -9
}

case "$1" in
    start)
        start
        ;;

    stop)
        stop
        ;;

    restart)
        stop
        start
        ;;

    *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
esac

exit $?
