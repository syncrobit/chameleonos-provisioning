#!/bin/bash

WORK_DIR="/opt/gateway_mfr"
PROG="bin/gateway_mfr"
PROG_PI="/usr/libexec/provinfo"
PROG_TUNNEL="/sbin/sshtunnel"
LOG="/var/log/provision.log"
PROV_REGISTER_URL="https://api.syncrob.it/provisioning/"
AUTH_TOKEN="6993E8BF9E116991FA6581A7BA7D9"

LED_PROG="/usr/bin/ledstrip"
LED_COLOR_OK="green"
LED_COLOR_OK_PENDING="yellow"
LED_COLOR_DONE="blue"
LED_COLOR_ERROR="red"


test -n "${OS_VERSION}" || source /etc/init.d/base

source /etc/init.d/ledpattern


prov_ecc() {
    msg_begin "Provisioning ECC chip"
    
    if ! [[ -e /dev/i2c-1 ]]; then
        set_led_pattern 3 ${LED_COLOR_ERROR}
        msg_fail "no I2C device"
        return 1
    fi

    cd ${WORK_DIR}
    export HOME=/var/run
    
    # Retry multiple times to provision, as ECC communication may sometimes fail
    ${PROG} ecc provision &>> ${LOG}
    ${PROG} ecc provision &>> ${LOG}
    ${PROG} ecc provision &>> ${LOG}

    msg_done
}

send_prov_info() {
    msg_begin "Sending provisioning info"

    prov_info=$(${PROG_PI})
    if [[ $? != 0 ]]; then
        set_led_pattern 3 ${LED_COLOR_ERROR}
        msg_fail
        return 1
    fi
    set_led_pattern 3 ${LED_COLOR_OK}
    prov_info=(${prov_info})
    
    test -r /sys/class/net/eth0/address && eth_mac=$(cat /sys/class/net/eth0/address)
    test -r /sys/class/net/wlan0/address && wlan_mac=$(cat /sys/class/net/wlan0/address)

    prov_info_json="{
        \"rpi_sn\":\"${prov_info[0]}\",
        \"ecc_sn\":\"${prov_info[1]}\",
        \"pub_key\":\"${prov_info[2]}\",
        \"eth_mac\":\"${eth_mac}\",
        \"wlan_mac\":\"${wlan_mac}\"
    }"
    
    prov_info_json=$(echo "${prov_info_json}" | tr -d '\t\n ')
    checksum=$(echo -n "${prov_info_json}" | md5sum | grep -oE '[a-f0-9]+')
    
    curl --verbose --insecure --fail --location-trusted "${PROV_REGISTER_URL}" \
         -H "Content-Type: application/json" \
         -H "Authorization: ${AUTH_TOKEN}" \
         -H "Content-Md5: ${checksum}" \
         -X POST -d "${prov_info_json}" &>> ${LOG}
    if [[ $? != 0 ]]; then
        set_led_pattern 5 ${LED_COLOR_ERROR}
        msg_fail
        return 1
    fi
    set_led_pattern 5 ${LED_COLOR_OK}

    ${LED_PROG} pattern ${LED_COLOR_DONE} ${LED_COLOR_DONE} ${LED_COLOR_DONE} ${LED_COLOR_DONE} ${LED_COLOR_DONE} ${LED_COLOR_DONE}
    msg_done

    echo " # RPi S/N:  ${prov_info[0]}"
    echo " # ECC S/N:  ${prov_info[1]}"
    echo " # Pub Key:  ${prov_info[2]}"
    echo " # ETH MAC:  ${eth_mac}"
    echo " # WLAN MAC: ${wlan_mac}"
}

start() {
    if ! (prov_ecc && send_prov_info); then
        ${PROG_TUNNEL} start
        sleep 86400
        reboot
        return 1
    fi
}

case "$1" in
    start)
        start
        ;;

    stop)
        ;;

    *)
        echo "Usage: $0 {start}"
        exit 1
esac

exit $?
